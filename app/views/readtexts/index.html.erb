<script src="https://wikimb.googlecode.com/files/jquery-1.6.4.min.js"></script>

<script type='text/javascript'>
$(document).ready(function() {

    (function($){
    
        $.extend({
            
            APP : {                
                
                formatTimer : function(a) {
                    if (a < 10) {
                        a = '0' + a;
                    }                              
                    return a;
                },    
                
                startTimer : function(dir) {
                    
                    var a;
                    
                    // save type
                    $.APP.dir = dir;
                    
                    // get current date
                    $.APP.d1 = new Date();
                    
                    switch($.APP.state) {
                            
                        case 'pause' :
                            
                            // resume timer
                            // get current timestamp (for calculations) and
                            // substract time difference between pause and now
                            $.APP.t1 = $.APP.d1.getTime() - $.APP.td;                            
                            
                        break;
                            
                        default :
                            
                            // get current timestamp (for calculations)
                            $.APP.t1 = $.APP.d1.getTime(); 
                            
                            // if countdown add ms based on seconds in textfield
                            if ($.APP.dir === 'cd') {
                                $.APP.t1 += parseInt($('#cd_seconds').val())*1000;
                            }    
                        
                        break;
                            
                    }                                   
                    
                    // reset state
                    $.APP.state = 'alive';   
                    $('#' + $.APP.dir + '_status').html('Running');
                    
                    // start loop
                    $.APP.loopTimer();
                    
                },
                
                pauseTimer : function() {
                    
                    // save timestamp of pause
                    $.APP.dp = new Date();
                    $.APP.tp = $.APP.dp.getTime();
                    
                    // save elapsed time (until pause)
                    $.APP.td = $.APP.tp - $.APP.t1;
                    
                    // change button value
                    $('#' + $.APP.dir + '_start').val('Resume');
                    
                    // set state
                    $.APP.state = 'pause';
                    $('#' + $.APP.dir + '_status').html('Paused');
                    
                },
                
                stopTimer : function() {
                    
                    // change button value
                    $('#' + $.APP.dir + '_start').val('Restart');                    
                    
                    // set state
                    $.APP.state = 'stop';
                    $('#' + $.APP.dir + '_status').html('Stopped');
                    
                },
                
                resetTimer : function() {

                    // reset display
                    $('#' + $.APP.dir + '_ms,#' + $.APP.dir + '_s,#' + $.APP.dir + '_m,#' + $.APP.dir + '_h').html('00');                 
                    
                    // change button value
                    $('#' + $.APP.dir + '_start').val('Start');                    
                    
                    // set state
                    $.APP.state = 'reset';  
                    $('#' + $.APP.dir + '_status').html('Reset & Idle again');
                    
                },
                
                endTimer : function(callback) {
                   
                    // change button value
                    $('#' + $.APP.dir + '_start').val('Restart');
                    
                    // set state
                    $.APP.state = 'end';
                    
                    // invoke callback
                    if (typeof callback === 'function') {
                        callback();
                    }    
                    
                },    
                
                loopTimer : function() {
                    
                    var td;
                    var d2,t2;
                    
                    var ms = 0;
                    var s  = 0;
                    var m  = 0;
                    var h  = 0;
                    
                    if ($.APP.state === 'alive') {
                                
                        // get current date and convert it into 
                        // timestamp for calculations
                        d2 = new Date();
                        t2 = d2.getTime();   
                        
                        // calculate time difference between
                        // initial and current timestamp
                        if ($.APP.dir === 'sw') {
                            td = t2 - $.APP.t1;
                        // reversed if countdown
                        } else {
                            td = $.APP.t1 - t2;
                            if (td <= 0) {
                                // if time difference is 0 end countdown
                                $.APP.endTimer(function(){
                                    $.APP.resetTimer();
                                    $('#' + $.APP.dir + '_status').html('Ended & Reset');
                                });
                            }    
                        }    
                        
                        // calculate milliseconds
                        ms = td%1000;
                        if (ms < 1) {
                            ms = 0;
                        } else {    
                            // calculate seconds
                            s = (td-ms)/1000;
                            if (s < 1) {
                                s = 0;
                            } else {
                                // calculate minutes   
                                var m = (s-(s%60))/60;
                                if (m < 1) {
                                    m = 0;
                                } else {
                                    // calculate hours
                                    var h = (m-(m%60))/60;
                                    if (h < 1) {
                                        h = 0;
                                    }                             
                                }    
                            }
                        }
                      
                        // substract elapsed minutes & hours
                        ms = Math.round(ms/100);
                        s  = s-(m*60);
                        m  = m-(h*60);                                
                        
                        // update display
                        $('#' + $.APP.dir + '_ms').html($.APP.formatTimer(ms));
                        $('#' + $.APP.dir + '_s').html($.APP.formatTimer(s));
                        $('#' + $.APP.dir + '_m').html($.APP.formatTimer(m));
                        $('#' + $.APP.dir + '_h').html($.APP.formatTimer(h));
                        
                        // loop
                        $.APP.t = setTimeout($.APP.loopTimer,1);
                    
                    } else {
                    
                        // kill loop
                        clearTimeout($.APP.t);
                        return true;
                    
                    }  
                    
                }
                    
            }    
        
        });
          
        $('#sw_start').live('click', function() {
            $.APP.startTimer('sw');
        });    

        $('#cd_start').live('click', function() {
            $.APP.startTimer('cd');
        });           
        
        $('#sw_stop,#cd_stop').live('click', function() {
            $.APP.stopTimer();
        });
        
        $('#sw_reset,#cd_reset').live('click', function() {
            $.APP.resetTimer();
        });  
        
        $('#sw_pause,#cd_pause').live('click', function() {
            $.APP.pauseTimer();
        });                
                
    })(jQuery);
        
});
</script>

<button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">
  Текст с секундомером
</button>
<button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal2">
  Вопросы к тексту
</button>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <h4 class="modal-title" id="myModalLabel">Черно-белые Лошадки</h4>
      </div>
      <div class="modal-body">
        <p>Когда-то зебрам принадлежала вся африканская саванна. Миллионные табуны этих животных населяли грандиозные пространства Черного континента, деля просторы африканских степей с антилопами, жирафами, буйволами. Золотой век зебр кончился с появлением в Африке белого человека. То, что не смогли сделать их естественные враги — львы и леопарды, оказалось вполне по силам «человеку с ружьем», едва не уничтожившему всю популяцию полосатых лошадок. Ныне эти последние «дикари» из свободного лошадиного племени нашли прибежище в заповедниках Африки.</p>

<p>Крупные табуны зебр можно встретить только на Африканском континенте. Здесь, в национальных парках Кении, ЮАР и Танзании, в поисках лучших пастбищ и водопоев мигрируют десятки тысяч этих животных. Конечно, такие большие табуны делятся на вполне самостоятельные, внутри мало связанные друг с другом семьи, состоящие из взрослого жеребца, нескольких кобыл и жеребят.
Жеребята хотя и задерживаются порой до четырехлетнего возраста, но чаще все же покидают семью, едва достигнув года, а кобылы — двух лет.</p>
<p>Самые маленькие зебры — горные. Эти прекрасные животные, некогда широко распространенные на юге Африки, ныне находятся на грани исчезновения. Полосатые лошадки, ростом чуть больше метра, имеют на коже самый замысловатый рисунок. Горные зебры не слишком-то любят общество других животных и предпочитают держаться особняком.</p>
<p>Зебры состоят в родстве как с лошадьми, так и с ослами. Несомненно, они своим внешним видом обнаруживают гораздо больше общего с лошадьми, да и скакуны из них тоже неплохие... Зебры Греви считаются самыми крупными, их шкуры покрыты узкими, частыми полосками. Крупную голову венчают вытянутые оттопыренные уши, совсем как у осла. У этих зебр ослиные хвосты, и кричат они по-ослиному.</p>
<p>Наиболee распространенными являются саванные зебры - именно их мы обычно видим в наших зоопарках. Зебры нередко жеребят. Часто взрослые жеребцы образуют группу, возглавляемую вожаком. Всю свою жизнь зебры проводят в семье, которая сохраняется до конца жизни ее членов, хотя порой встречаются и жеребцы-одиночки.</p>
<p>Как и у большинства животных, в семейной группе зебр всегда прослеживается иерархия, которую легко наблюдать во время шествия животных на водопой. Первой следует старая опытная кобыла, за ней жеребята и другие кобылы, а последним идет жеребец. Жеребята держатся возли матери.</p>
<p>Члены семьи прекрасно знают друг друга и легко отличают "своих" от "чужих", поскольку полосатый наряд каждой зебры индивидуален, словно отпечатки пальцев у человека. Ночью же зебры безошибочно распознают "родственников" по голосу.</p>
<p>Едва родившись, жеребята очень быстро становятся вполне самостоятельными. Спустя четверть часа новорожденный встает на ноги, а по прошествии еще 20 минут жеребенок уже способен пробежать пару километров, не уступая в скорости матери. Молодые недолго живут в материнской группе - жеребцы устраивают потасовки. Только во время гона жеребцы сходятся в более серьезных поединках. Своеобразного кодекса схваток, как многие другие животные, зебры не придерживаются - кусаются и бьют копытами, не щадя соперника. При этом, однако, все заканчивается благополучно - зебры никогда не убивают друг друга. В финале борьбы проигравший сдается, а победитель кладет ему на голову круп. Вообще, зебры не так уж беззащитны, как принято думать. Конечно, чаще всего они предпочитают спасаться от опасности бегством, но вполне способны и к активной обороне. Обычно зебры решают дать отпор хищникам, защищая жеребят.</p>
      </div>
      <div class="modal-footer">
        <div>
    <h1>Секундомер</h1>
    <span id="sw_h">00</span>:
    <span id="sw_m">00</span>:
    <span id="sw_s">00</span>:
    <span id="sw_ms">00</span>
    <br/>
    <br/>
    <input type="button" value="Start" id="sw_start" />
    <input type="button" value="Pause" id="sw_pause" />
    <input type="button" value="Stop"  id="sw_stop" />
    <input type="button" value="Reset" id="sw_reset" />
    <br/>
    <br/>
    <span id="sw_status">Idle</span>
</div>
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" data-dismiss="modal"  data-toggle="modal" data-target="#myModal2">Перейти к вопросам</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <h4 class="modal-title" id="myModalLabel">Вопросы к тексту</h4>
      </div>
      <div class="modal-body">
<p>Какие животные населяют пространство черного континента?</p>
<p>Кто едва не уничтожил популяцию полосатых лошадей?</p>
<p>В каких национальных парках встречаются зебры на сегодняшний день?</p>
<p>Каков состав семьи зебр?</p>
<p>Какова иерархия в семейной группе?</p>
<p>Как зебры отличают своих от чужих?</p>
<p>Во сколько лет молодые зебры покидают семью?</p>
<p>Какого роста горные зебры?</p>
<p>Как заканчиваются поединки у зебр?</p>
<p>Как называется текст?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>